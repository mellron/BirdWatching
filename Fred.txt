using System;
using System.Collections.Generic;
using System.Linq;
using UglyToad.PdfPig.Content;
using UglyToad.PdfPig.Geometry;

namespace W2PrintProcessor
{
    class W2Print
    {
        public string AddressExtract(Page page)
        {
            // Define the rectangle area from which to extract text
            PdfRectangle rect = new PdfRectangle(
                14,                        // Lower-left x-coordinate
                page.Height - 162,         // Lower-left y-coordinate
                14 + 280,                  // Upper-right x-coordinate
                page.Height - (162 + 54)   // Upper-right y-coordinate
            );

            string addressLines = string.Empty;

            // Group words by their y-coordinate to form lines
            var lines = page.GetWords()
                            .Where(word => rect.Contains(word.BoundingBox)) // Only consider words inside the rectangle
                            .GroupBy(word => Math.Round(word.BoundingBox.Bottom, 2))
                            .OrderByDescending(g => g.Key); // Descending order for top-to-bottom reading

            foreach (var line in lines)
            {
                foreach (var word in line.OrderBy(w => w.BoundingBox.Left)) // Order words from left to right
                {
                    addressLines += word.Text + " ";
                }
                addressLines = addressLines.Trim() + "\n"; // Add a newline after each line
            }

            return addressLines.TrimEnd(); // Remove the last newline character
        }

        // Other methods of the W2Print class...
    }
}
